name: Release
on:
  push:
    tags: ["v*"]

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 11
          cache: sbt
      - name: Install SBT
        # we cannot use sbt/setup-sbt@v1 because of repository policy
        run: "curl -sL \"https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823\" | sudo -H gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/scalasbt-release.gpg --import &&
              sudo chmod 644 /etc/apt/trusted.gpg.d/scalasbt-release.gpg &&
              echo \"deb https://repo.scala-sbt.org/scalasbt/debian all main\" | sudo tee /etc/apt/sources.list.d/sbt.list &&
              sudo apt-get update &&
              sudo apt-get install sbt
              "
      - name: Check/Compile/Test
        run: sbt versionCheck check
      - name: Release
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET_2024 }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE_2024 }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: sbt ci-release
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems
          restore-keys: |
            ${{ runner.os }}-gems
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '3.0'
      - name: Install jekyll
        run: |
          export GEM_HOME=${PWD}/vendor/bundle
          gem install jekyll -v 4.0.0
      - name: Publish Microsite
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${DEPLOY_KEY}"
          git config --global user.email "janecek@avast.com"
          git config --global user.name "scala-server-toolkit bot"
          export PATH="${PWD}/vendor/bundle/bin:$PATH"
          export GEM_HOME=${PWD}/vendor/bundle
          sbt site/publishMicrosite
